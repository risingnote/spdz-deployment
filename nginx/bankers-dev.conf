# Here tcp connections forwarded too are accessed via a docker bridge
# network and so do not need to be exposed to host o/s.
user  nginx;
worker_processes  1;
	
error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;
	
events {
  worker_connections  1024;
}
	
http {

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  upstream bankersGUI {
    server bankers-bonus-gui:8080;
  }

  # SPDZ proxies (both use same host, but via docker bridge network)
  upstream bankersSpdzProxy0 {
    server spdz-proxy-bankers0:8080;
  }
  upstream bankersSpdzProxy1 {
    server spdz-proxy-bankers1:8080;
  }

  server {
    listen 80;
    # listen 443 ssl;
    # ssl_certificate     /etc/certs/server.crt;
    # ssl_certificate_key /etc/certs/server.key;    

    # Landing page
    location / {
      root   /usr/share/nginx/html;
      index  index.html index.htm;
    }
      
    # Websocket connections
    location /bankers/socket.io {
      proxy_pass http://bankersGUI;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    # Other Bankers GUI connections
    location /bankers {
      # rewrite ^/bankers(.*) /$1 break;
      proxy_pass http://bankersGUI;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
  }

  # SPDZ proxies (in dev same host so separate port)
  server {
    listen 3010;
    location /bankers/spdzapi {
      rewrite ^/bankers/(.*) /$1 break;
      proxy_pass http://bankersSpdzProxy0;
    }
  }
  server {
    listen 3011;
    location /bankers/spdzapi {
      rewrite ^/bankers/(.*) /$1 break;
      proxy_pass http://bankersSpdzProxy1;
    }
  }

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
	
  access_log  /var/log/nginx/access.log  main;

  rewrite_log on;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  #gzip  on;

}
